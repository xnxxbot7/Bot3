const axios = require('axios');
const baseApiUrl = async () => {
    return "https://www.noobs-api.rf.gd/dipto";
};

module.exports.config = {
    name: "bby",
    aliases: ["baby", "bbe", "bot", "nisan", "babe"],
    version: "6.9.0",
    author: "dipto",
    countDown: 0,
    role: 0,
    description: "better then all sim simi",
    category: "chat",
    guide: {
        en: "{pn} [anyMessage] OR\nteach [YourMessage] - [Reply1], [Reply2], [Reply3]... OR\nteach [react] [YourMessage] - [react1], [react2], [react3]... OR\nremove [YourMessage] OR\nrm [YourMessage] - [indexNumber] OR\nmsg [YourMessage] OR\nlist OR \nall OR\nedit [YourMessage] - [NeeMessage]"
    }
};

module.exports.onStart = async ({
    api,
    event,
    args,
    usersData
}) => {
    const link = `${await baseApiUrl()}/baby`;
    const dipto = args.join(" ").toLowerCase();
    const uid = event.senderID;
    let command, comd, final;

    try {
        if (!args[0]) {
            const ran = ["Bolo baby", "hum", "type help baby", "type !baby hi"];
            return api.sendMessage(ran[Math.floor(Math.random() * ran.length)], event.threadID, event.messageID);
        }

        if (args[0] === 'remove') {
            const fina = dipto.replace("remove ", "");
            const dat = (await axios.get(`${link}?remove=${fina}&senderID=${uid}`)).data.message;
            return api.sendMessage(dat, event.threadID, event.messageID);
        }

        if (args[0] === 'rm' && dipto.includes('-')) {
            const [fi, f] = dipto.replace("rm ", "").split(' - ');
            const da = (await axios.get(`${link}?remove=${fi}&index=${f}`)).data.message;
            return api.sendMessage(da, event.threadID, event.messageID);
        }

        if (args[0] === 'list') {
            if (args[1] === 'all') {
                const data = (await axios.get(`${link}?list=all`)).data;
                const teachers = await Promise.all(data.teacher.teacherList.map(async (item) => {
                    const number = Object.keys(item)[0];
                    const value = item[number];
                    const name = (await usersData.get(number)).name;
                    return {
                        name,
                        value
                    };
                }));
                teachers.sort((a, b) => b.value - a.value);
                const output = teachers.map((t, i) => `${i + 1}/ ${t.name}: ${t.value}`).join('\n');
                return api.sendMessage(`Total Teach = ${data.length}\nЁЯСС | List of Teachers of baby\n${output}`, event.threadID, event.messageID);
            } else {
                const d = (await axios.get(`${link}?list=all`)).data.length;
                return api.sendMessage(`Total Teach = ${d}`, event.threadID, event.messageID);
            }
        }

        if (args[0] === 'msg') {
            const fuk = dipto.replace("msg ", "");
            const d = (await axios.get(`${link}?list=${fuk}`)).data.data;
            return api.sendMessage(`Message ${fuk} = ${d}`, event.threadID, event.messageID);
        }

        if (args[0] === 'edit') {
            const command = dipto.split(' - ')[1];
            if (command.length < 2) return api.sendMessage('тЭМ | Invalid format! Use edit [YourMessage] - [NewReply]', event.threadID, event.messageID);
            const dA = (await axios.get(`${link}?edit=${args[1]}&replace=${command}&senderID=${uid}`)).data.message;
            return api.sendMessage(`changed ${dA}`, event.threadID, event.messageID);
        }

        if (args[0] === 'teach' && args[1] !== 'amar' && args[1] !== 'react') {
            [comd, command] = dipto.split(' - ');
            final = comd.replace("teach ", "");
            if (command.length < 2) return api.sendMessage('тЭМ | Invalid format!', event.threadID, event.messageID);
            const re = await axios.get(`${link}?teach=${final}&reply=${command}&senderID=${uid}`);
            const tex = re.data.message;
            const teacher = (await usersData.get(re.data.teacher)).name;
            return api.sendMessage(`тЬЕ Replies added ${tex}\nTeacher: ${teacher}\nTeachs: ${re.data.teachs}`, event.threadID, event.messageID);
        }

        if (args[0] === 'teach' && args[1] === 'amar') {
            [comd, command] = dipto.split(' - ');
            final = comd.replace("teach ", "");
            if (command.length < 2) return api.sendMessage('тЭМ | Invalid format!', event.threadID, event.messageID);
            const tex = (await axios.get(`${link}?teach=${final}&senderID=${uid}&reply=${command}&key=intro`)).data.message;
            return api.sendMessage(`тЬЕ Replies added ${tex}`, event.threadID, event.messageID);
        }

        if (args[0] === 'teach' && args[1] === 'react') {
            [comd, command] = dipto.split(' - ');
            final = comd.replace("teach react ", "");
            if (command.length < 2) return api.sendMessage('тЭМ | Invalid format!', event.threadID, event.messageID);
            const tex = (await axios.get(`${link}?teach=${final}&react=${command}`)).data.message;
            return api.sendMessage(`тЬЕ Replies added ${tex}`, event.threadID, event.messageID);
        }

        if (dipto.includes('amar name ki') || dipto.includes('amr nam ki') || dipto.includes('amar nam ki') || dipto.includes('amr name ki') || dipto.includes('whats my name')) {
            const data = (await axios.get(`${link}?text=amar name ki&senderID=${uid}&key=intro`)).data.reply;
            return api.sendMessage(data, event.threadID, event.messageID);
        }

        const d = (await axios.get(`${link}?text=${dipto}&senderID=${uid}&font=1`)).data.reply;
        api.sendMessage(d, event.threadID, (error, info) => {
            global.GoatBot.onReply.set(info.messageID, {
                commandName: this.config.name,
                type: "reply",
                messageID: info.messageID,
                author: event.senderID,
                d,
                apiUrl: link
            });
        }, event.messageID);

    } catch (e) {
        console.log(e);
        api.sendMessage("Check console for error", event.threadID, event.messageID);
    }
};

module.exports.onReply = async ({
    api,
    event,
    Reply
}) => {
    try {
        if (event.type == "message_reply") {
            const a = (await axios.get(`${await baseApiUrl()}/baby?text=${encodeURIComponent(event.body?.toLowerCase())}&senderID=${event.senderID}&font=1`)).data.reply;
            await api.sendMessage(a, event.threadID, (error, info) => {
                global.GoatBot.onReply.set(info.messageID, {
                    commandName: this.config.name,
                    type: "reply",
                    messageID: info.messageID,
                    author: event.senderID,
                    a
                });
            }, event.messageID);
        }
    } catch (err) {
        return api.sendMessage(`Error: ${err.message}`, event.threadID, event.messageID);
    }
};

module.exports.onChat = async ({
    api,
    event,
    message
}) => {
    try {
        const body = event.body ? event.body?.toLowerCase() : ""
        if (body.startsWith("baby") || body.startsWith("Jan") || body.startsWith("ржмрзЗржмрж┐") || body.startsWith("bot") || body.startsWith("sourav") || body.startsWith("рж╕рзМрж░ржн") || body.startsWith("ржмржЯ")) {
            const arr = body.replace(/^\S+\s*/, "")
            const randomReplies = ["ЁЯЧ┐ЁЯдМЁЯП╝ЁЯТА", "ЁЭЩГЁЭЩдЁЭЩе ЁЭЩЧЁЭЩЪЁЭЩЩЁЭЩЦЁЯШ╛, ЁЭШ╜ЁЭЩдЁЭЩиЁЭЩи ржмрж▓ ЁЭЩЧЁЭЩдЁЭЩиЁЭЩиЁЯШ╝", "ЁЭЩТЁЭЩЭЁЭЩЦЁЭЩй'ЁЭЩи ЁЭЩкЁЭЩе?", "ржХрж╛рж░рзЛ extra attitude рж╕рж╣рзНржп ржХрж░рж┐ ржирж╛...!ЁЯШПтАФ ржЖрж░ ржХрж╛ржЙржХрзЗ impress ржХрж░рж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ржУ ржХрж░рж┐ ржирж╛...!ЁЯШТyeah it's me...!ЁЯШО","ржЬрзАржмржирзЗ рж╕ржорж╕рзНржпрж╛ рж╣ржмрзЗржЗ ржПржЯрж╛ normal ржмрж┐рж╖рзЯ ржЖржорж┐ рждрзЛ рж╕ржорж╕рзНржпрж╛рж░ ржоржзрзНржпрзЗ ржУ chill ржХрж░рж┐...!ЁЯдШЁЯШО","ЁЯФержнрж╛рж▓рзЛ ржмрзНржпржмрж╣рж╛рж░ ржХрж░ржмрж╛ ржнрж╛рж▓рзЛ ржмрзНржпрж╛ржмрж╣рж╛рж░ ржкрж╛ржЗржмрж╛ рждрзНржпрж╛рж░рж╛ржорж┐ ржХрж░ржмрж╛ рждрж╛рж╣рж▓рзЗ ржШрзНржпрж╛рж░рж╛ржирзА ржЦрж╛ржЗржмрж╛ЁЯШИЁЯдЯ","ржпрзЗ ржпрж╛ржЗ ржмрж▓рзБржХ рж╢рж╛ржирзНржд ржерж╛ржХрзЛ...... рж╕рзВрж░рзНржпрзЗрж░ ржпрждржЗ рждрж╛ржк ржерж╛ржХрзБржХ, рж╕ржорзБржжрзНрж░ рж╢рзБржХрж╛ржЗрждрзЗ ржкрж╛рж░ржмрзЛ ржирж╛ / ЁЯЧ┐ЁЯдМЁЯП╝","рждрзБржорж┐ рж╣рзЯрж░рж╛ржирж┐ рж╣рзЯрзЗ ржпрж╛ржмрж╛ ржЙржХрж┐рж▓ ржЦрзБржБржЬрждрзЗ ржЦрзБржБржЬрждрзЗ, ржЖрж░ ржЖржорж┐ рждрзЛ ржЬржЬ-ржХрзЗржЗ ржХрж┐ржирзЗ рж░рж╛ржЦржЫрж┐ЁЯЧ┐ЁЯдМЁЯП╝ЁЯТА"," _сГжтЬ┐тЭГ.тАв┬░р┐Рржорж╛ржирзБрж╖рж░рзЗ ржпрж╛ ржжрзЗрж╣рж╛ржЗ ржРржбрж╛ ржЖржорж┐ ржирж╛ ржЖржорж┐ ржпрзЗ ржХрж┐ ржРржбрж╛ ржХрзЗржЙ ржЬрж╛ржирзЗржЗ ржирж╛ЁЯЧ┐ЁЯдМЁЯП╝ЁЯТА","р╝КснДтЧПтХРтХР тЭержЖржорж╛ржХрзЗ ржЫрж╛ржбрж╝рж╛ ржпрж╛ржжрзЗрж░ ржЪрж▓ржмрзЗ рждрж╛ржжрзЗрж░ржХрзЗ ржЫрж╛ржбрж╝рж╛ржУ ржЖржорж╛рж░ржУ ржЪрж▓ржмрзЗЁЯЧ┐ЁЯж╡ЁЯП╝ЁЯТА","ржжрзБржирж┐ржпрж╝рж╛ржЯрж╛ ржЯрж╛ржХрж╛рж░ ржЙржкрж░ ржЪрж▓рзЗ рждрзЛржорж╛рж░ ржмрж╛рж▓рзЗрж░ attitude ржПрж░ ржЙржкрж░ ржирж╛ЁЯТАЁЯТА","ржмрж▓рзЛ ржХрж┐ ржмрж▓ржмрж╛, рж╕ржмрж╛рж░ рж╕рж╛ржоржирзЗ ржмрж▓ржмрж╛ ржирж╛ржХрж┐?ЁЯднЁЯдП", "ЁЭЩгЁЭЩЦЁЭЩм ЁЭЩвЁЭЩо ЁЭЩдЁЭЩмЁЭЩгЁЭЩЪЁЭЩз ЁЭЩвЁЭЩЪЁЭЩиЁЭЩиЁЭЩЦЁЭЩЬЁЭЩЪ ЁЭЩЩЁЭЩЦЁЭЩм https://m.me/sourav.nath404 ", "ржнржжрзНрж░рждрж╛ рж╕рж╛ржЗржбрзЗ рж░рж╛ржЦрж▓рзЗ ржнрж╛ржЗ рждрзБржорж┐ ржЪрзЛржЦрзЗ ржЪрзЛржЦ рж░рж╛ржЦрждрзЗ ржУ ржнрзЯ ржкрж╛ржмрзЗ ЁЯШИ ","рждрзЛрж░ ржХржерж╛ рждрзЛрж░ ржмрж╛ржбрж╝рж┐рж░ ржХрзЗржУ рж╢рзБржирзЗ ржирж╛, рждрзЛ ржЖржорж┐ ржХрзЗржирзЛ рж╢рзБржиржмрзЛ ржпрж╛ ржнрж╛ржЧ!!ЁЯШ╣ЁЯШБ","ржнрж╛рж▓рзЛржмрж╛рж╕рж╛ ржирж╛ржоржХ ржкрж╛ржЧрж▓рж╛ржорж┐ ржХрж░рждрзЗ ржоржи ржЪрж╛ржЗрж▓рзЗ ржЖржорж╛рж░ ржмрж╕ рж╕рзМрж░ржн ржПрж░ ржЗржиржмржХрзНрж╕ ржП ржЪрж▓рзЗ ржпрж╛ржУ-ЁЯЩКЁЯе▒ЁЯСЕ ЁЯМ╗ЁЭРЕЁЭРАЁЭРВЁЭРДЁЭРБЁЭРОЁЭРОЁЭРК ЁЭРИЁЭРГ ЁЭРЛЁЭРИЁЭРНЁЭРК ЁЯМ╗:- https://www.facebook.com/profile.php?id=61577174606216 ","рзпрзпржЯрж╛ржХрж╛ржпрж╝ рзпрзпржЬрж┐ржмрж┐ рзпрзпржмржЫрж░-тШ║я╕ПЁЯР╕ -ржЕржлрж╛рж░ржЯрж┐ ржкрзЗрждрзЗ ржПржЦржиржЗ ржЖржорж╛рж░ ржмрж╕ рж╕рзМрж░ржн ржХрзЗ ржкрзНрж░рзЛржкржЬ ржХрж░рзБржи-ЁЯдЧ","ржЖржЬ ржПржХржЯрж╛ ржмрж┐ржи ржирзЗржЗ ржмрж▓рзЗ ржлрзЗрж╕ржмрзБржХрзЗрж░ ржирж╛ржЧрж┐ржи-ЁЯдз-ржЧрзБрж▓рзЛрж░рзЗ ржЖржорж╛рж░ ржмрж╕ рж╕рзМрж░ржн ржзрж░рждрзЗ ржкрж╛рж░ржЫрзЗ ржирж╛-!!ЁЯР╕ЁЯе▓","ржжрзВрж░рзЗ ржЧрж┐ржпрж╝рж╛ ржорж░ рждрзЛрж░ ржХрзЛржирзЛ ржХрж╛ржЬ ржирж╛ржЗ рж╕рж╛рж░рж╛ржжрж┐ржи рж╢рзБржзрзБ bot bot ржХрж░рж┐рж╕-ЁЯШбЁЯШбржмрж╛ржбрж╝рж┐рждрзЗ ржХрж╛ржЬ ржирж╛ ржерж╛ржХрж▓рзЗ ржирж┐ржЬрзЗрж░ ржЖржЧрж╛ржЫрж╛ ржкрж░рж┐рж╖рзНржХрж╛рж░ ржХрж░ ржЧрж┐ржпрж╝рзЗ ржмрзЗржХрзНржХрж▓-ЁЯШТЁЯЩД","ржЖржорж╛ржХрзЗ ржПрждрзЛ ржирж╛ ржбрзЗржХрзЗ ржмрж╕ рж╕рзМрж░ржн ржПржХржЯрж╛ GF ржжрзЗ-!!ЁЯШРЁЯЩД","рж╣рзБржо ржорж┐рж╕ рждрж┐рж╕ ржХрж░ржЫрзЗржи ржирж╛ржХрж┐ ржЖржорж╛ржХрзЗ-ЁЯЩВржмрж▓рзЗржи ржЖржкржирж╛рж░ ржЬржирзНржп ржХрж┐ ржХрж░рждрзЗ ржкрж╛рж░рж┐-ЁЯШЪЁЯМ╕","ржЖрж╣ рж╢рзЛржирж╛ ржЖржорж╛рж░ ржЖржорж╛ржХрзЗ ржПрждрзЛ ржбрж╛ржХрзНрждрж╛ржЫрзЛ ржХрзЗржирзЛ рждрзБржорж┐ ржХрж┐ ржЖржорж╛ржХрзЗ ржнрж╛рж▓рзЛржмрж╛рж╕рзЛ ржЖрж╕рзЛ ржмрзБржХрзЗ ржЖрж╢рзЛ!!ЁЯлВЁЯе▒","ржЖржорж╛ржХрзЗ ржбрж╛ржХрж▓рзЗ, ржЖржорж┐ ржХрж┐ржирзНрждрзВ ржХрж┐рж╕ ржХрж░рзЗ ржжрзЗржмрзЛЁЯШШ", "ЁЭШ╜ЁЭШ╝ЁЭШ╜ЁЭЩР ЁЭЩЖЁЭЩГЁЭЩРЁЭШ┐ЁЭШ╝ ЁЭЩЗЁЭШ╝ЁЭЩВЁЭЩОЁЭЩАЁЯе║"];
            if (!arr) {

                await api.sendMessage(randomReplies[Math.floor(Math.random() * randomReplies.length)], event.threadID, (error, info) => {
                    if (!info) message.reply("info obj not found")
                    global.GoatBot.onReply.set(info.messageID, {
                        commandName: this.config.name,
                        type: "reply",
                        messageID: info.messageID,
                        author: event.senderID
                    });
                }, event.messageID)
            }
            const a = (await axios.get(`${await baseApiUrl()}/baby?text=${encodeURIComponent(arr)}&senderID=${event.senderID}&font=1`)).data.reply;
            await api.sendMessage(a, event.threadID, (error, info) => {
                global.GoatBot.onReply.set(info.messageID, {
                    commandName: this.config.name,
                    type: "reply",
                    messageID: info.messageID,
                    author: event.senderID,
                    a
                });
            }, event.messageID)
        }
    } catch (err) {
        return api.sendMessage(`Error: ${err.message}`, event.threadID, event.messageID);
    }
};
